'use strict';
const request = require('request');
var Ippopay = function () {  
    function Ippopay() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};  
        var public_key = options.public_key,
            secret_key = options.secret_key;
        if (!public_key) {
        throw new Error('`Public Key` is mandatory');
        }
        if (!secret_key) {
        throw new Error('`Secret Key` is mandatory');
        }
        this.public_key = public_key;
        this.secret_key = secret_key; 
        this.checkValidAmount = function checkValidAmount(str) {
            if (typeof str != "number") return false
            return !isNaN(str) && !isNaN(parseFloat(str))
        }
        var hostUrl;
        public_key.includes('pk_live') === true ?
            hostUrl = 'https://api.ippopay.com/v1/'
            :
            hostUrl = 'https://api.ippopay.com/apitest/v1/pg/';
        this.createOrder = function createOrder(data, callback){
            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};            
            var amount = params.amount,
                currency = params.currency,
                notify_url = params.notify_url,
                payment_modes = params.payment_modes,customerName,customerEmail,customerPhone,countryCode;
            params.customer !== undefined && (
                customerName = params.customer.name,
                customerEmail = params.customer.email,
                params.customer.phone !== undefined && (
                    customerPhone = params.customer.phone.national_number,
                    countryCode = params.customer.phone.country_code
                )
            )
            currency = currency || 'INR';
            customerName = customerName || '';
            customerEmail = customerEmail || '';
            customerPhone = customerPhone || '';
            countryCode = countryCode || '91';
            payment_modes = payment_modes || 'cc,dc,nb,upi';
            notify_url = notify_url || '';
            if(this.checkValidAmount(params.amount) !== true && amount === 0) {
                throw new Error('`Amount` is mandatory');
            }
            var data = Object.assign({
                amount: amount, 
                currency: currency,
                payment_modes: payment_modes,
                customer: {
                    name: customerName,
                    email: customerEmail,
                    phone: {
                        country_code: countryCode,
                        national_number: customerPhone
                    }
                },
                notify_url:notify_url
            });            
            var options = {
                url : hostUrl+'order/create',
                headers:{
                    'Content-Type': 'application/json',
                    "Authorization" : "Basic " + new Buffer(public_key + ":" + secret_key).toString("base64")
                },
              body:JSON.stringify(data)
            }
            request.post(options , function (error, response, body ) {
                callback(null , body);
            })
        }
        this.orderTransactionDetails = function orderTransactionDetails(data, callback){
            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};            
            var orderId = params.orderId;
            var options = {
                url : hostUrl+'order/'+orderId+'/transaction',
                headers:{
                    'Content-Type': 'application/json',
                    "Authorization" : "Basic " + new Buffer(public_key + ":" + secret_key).toString("base64")
                }
            }
            request.get(options , function (error, response, body ) {
                callback(null , body);
            })
        }
    }
    return Ippopay;
}(); 
module.exports = Ippopay;